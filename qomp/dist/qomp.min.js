(()=>{var p=btoa||(t=>Buffer.from(t).toString("base64")),g=atob||(t=>Buffer.from(t,"base64").toString("utf-8")),f=t=>Promise.resolve().then(t),d=(t,s,e)=>{let n=document.createElement(t);Object.entries(s).forEach(([o,l])=>n.setAttribute(o,l)),e&&n.append(document.createTextNode(e)),document.head.append(n)},m=({link:t,css:s})=>{s.length>0&&d("style",{type:"text/css"},s),t.length>0&&(typeof t=="string"?[t]:t).forEach(n=>d("link",{rel:"stylesheet",href:n}))},r=!1,N=t=>document.querySelector(t);function a(t,s){let e=Object.assign({elCount:0,importMetaUrl:t,tagName:t.split("/").pop().split(".").shift(),props:{},attr:[],css:()=>"",html:()=>"",update:()=>{},events:()=>[],do:{},style:u,renderClient:y,define:E},s),n=Object.assign((...o)=>h.apply(e,o),e);return a.tags.push(n),n}a.tags=[];a.styleAll=()=>{let t={link:[],css:""};return a.tags.forEach(s=>{let e=s.style();e.link&&t.link.push(e.link),e.css&&(t.css+=`
`+e.css)}),t};a.defineAll=(t=!0)=>{t&&m(a.styleAll()),a.tags.forEach(s=>{s.define(!1)})};function u(){let t=this,s={};return t.css===!0?s.link=t.importMetaUrl.replace(".js",".css"):s.css=t.css(t.tagName).trim(),s}function h(t="",s={},e=""){let n=this;return n.elCount++,Array.isArray(e)&&(e=e.join(`
`)),`<${n.tagName} ${t} data-props="${p(JSON.stringify(s))}">  ${n.html({props:s}).replace("<slot></slot>",e)}</${n.tagName}>`}function y(t,s={}){let e=this;e.elCount++;let n=e.html({props:s});if(!n.includes("<slot>")){t.innerHTML=n;return}let o=document.createElement("div");[...t.childNodes].filter(c=>c.textContent.trim()).forEach(c=>o.appendChild(c)),t.innerHTML=n;for(let c of[...o.childNodes]){let i=t.querySelector("slot");i?i.parentNode.replaceChild(c,i):console.warn("Too many child nodes or too few slots in",e.tagName,t.id)}}function E(t=!0){let s=this;r&&s.tagName,t&&m(s.style()),customElements.define(s.tagName,class extends HTMLElement{constructor(){super();let e=this;e.mem={props:Object.assign({},s.props),ready:!1,update(){s.update({el:e,props:e.mem.props,set:(n,o)=>e.querySelector(n).innerHTML=o}),e.dispatchEvent(new CustomEvent("change",{detail:{...e.mem.props}}))},elEvents:[]},e.do={},Object.entries(s.do).forEach(([n,o])=>{e.do[n]=o.bind(e.mem)}),r&&(s.tagName,e.id)}set props(e){let n=this;Object.assign(n.mem.props,e),n.mem.ready&&n.mem.update()}get props(){return{...this.mem.props}}connectedCallback(){let e=this;if(this.mem.ready){r&&(s.tagName,e.id);return}r&&(s.tagName,e.id),f(()=>{e.dataset.props?(Object.assign(e.mem.props,JSON.parse(g(e.dataset.props))),r&&(s.tagName,e.id)):(s.renderClient(e,e.mem.props),r&&(s.tagName,e.id)),r&&(s.tagName,e.id),e.mem.elEvents=s.events({el:e}),e.mem.elEvents.forEach(([o,l,c])=>{e.querySelector(o).addEventListener(l,c)})}),e.mem.ready=!0}disconnectedCallback(){let e=this;if(e.parentElement){r&&(s.tagName,e.id);return}r&&(s.tagName,e.id),r&&(s.tagName,e.id),e.mem.elEvents.forEach(([n,o,l])=>e.querySelector(n).removeEventListener(o,l)),e.mem.elEvents=[]}static get observedAttributes(){return s.attr}attributeChangedCallback(e,n,o){let l=this;l.props={[e]:o}}})}})();
