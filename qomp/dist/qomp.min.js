(()=>{var d=btoa||(t=>Buffer.from(t).toString("base64")),f=atob||(t=>Buffer.from(t,"base64").toString("utf-8")),c=t=>Promise.resolve().then(t),i=(t,s,e)=>{let n=document.createElement(t);Object.entries(s).forEach(([r,o])=>n.setAttribute(r,o)),e&&n.append(document.createTextNode(e)),document.head.append(n)},m=({link:t,css:s})=>{s.length>0&&i("style",{type:"text/css"},s),t.length>0&&(typeof t=="string"?[t]:t).forEach(n=>i("link",{rel:"stylesheet",href:n}))},p="client-rendered";function l(t,s){return s=Object.assign(h,{elCount:0,importMetaUrl:t,tagName:t.split("/").pop().split(".").shift(),props:{},attr:[],css:()=>"",html:()=>"",update:()=>{},events:()=>[],do:{},style:u,renderClient:g,define:E},s),l.tags.push(s),s}l.tags=[];l.styleAll=function(){let t={link:[],css:""};return l.tags.forEach(s=>{let e=s.style();e.link&&t.link.push(e.link),e.css&&(t.css+=`
`+e.css)}),t};l.defineAll=function(t=!0){t&&m(l.styleAll()),l.tags.forEach(s=>{s.define(!1)})};function u(){let t=this,s={};return t.css===!0?s.link=t.importMetaUrl.replace(".js",".css"):s.css=t.css(t.tagName).trim(),s}function h(t="",s={},e=""){let n=this;return n.elCount++,Array.isArray(e)&&(e=e.join(`
`)),`
    <${n.tagName} ${t} data-props="${d(JSON.stringify(s))}">
      ${n.html({props:s}).replace("<slot></slot>","<slot>"+e+"</slot>")}
    </${n.tagName}>
  `}function g(t,s={}){let e=this;console.log("renderClient",e.tagName),e.elCount++;let n=e.html({props:s});if(!n.includes("<slot>")){t.innerHTML=n;return}let r=document.createElement("div");for(let o of[...t.children])r.appendChild(o);t.innerHTML=n;for(let o of[...r.children]){let a=t.querySelector("slot");a.parentNode.replaceChild(o,a)}t.dataset.props=p,console.log("exit")}function E(t=!0){let s=this;t&&m(s.style()),customElements.define(s.tagName,class extends HTMLElement{constructor(){super();let e=this;e.mem={props:Object.assign({},s.props),ready:!1,update(){s.update({el:e,props:e.mem.props,set:(n,r)=>e.querySelector(n).innerHTML=r}),e.dispatchEvent(new CustomEvent("change",{detail:{...e.mem.props}}))},elEvents:[]},e.do={},Object.entries(s.do).forEach(([n,r])=>{e.do[n]=r.bind(e.mem)})}set props(e){let n=this;Object.assign(n.mem.props,e),n.mem.ready&&n.mem.update()}get props(){return{...this.mem.props}}connectedCallback(){let e=this;if(this.mem.ready){console.log("qomp skip reconnect");return}c(()=>{let n=e.dataset.props;n?n!==p&&Object.assign(e.mem.props,JSON.parse(f(e.dataset.props))):s.renderClient(e,e.mem.props),c(()=>{!e.parentElement||(e.mem.elEvents=s.events({el:e}),e.mem.elEvents.forEach(([r,o,a])=>{e.querySelector(r).addEventListener(o,a)}))}),e.mem.ready=!0})}disconnectedCallback(){let e=this;e.mem.elEvents.forEach(([n,r,o])=>e.querySelector(n).removeEventListener(r,o)),e.mem.elEvents=[]}static get observedAttributes(){return s.attr}attributeChangedCallback(e,n,r){let o=this;o.props={[e]:r}}})}})();
